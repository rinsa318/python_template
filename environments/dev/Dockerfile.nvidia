# -------------------------------------------
# Base
# -------------------------------------------
# [NOTE]
# build時は「compose.yaml->Dockerfile」の順にARGの値が優先される。
# compose.yamlに設定がなかったとき用にデフォルト値を設定
ARG UV_VERSION=0.5.29
# "COPY --from"の中ではARGは使用できないため、余分なFROMを定義
# 参考：https://github.com/docker/buildx/issues/1050#issuecomment-1090026399
FROM ghcr.io/astral-sh/uv:${UV_VERSION} AS astral_uv
FROM nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04

# -------------------------------------------
# ディレクトリの設定
# -------------------------------------------
ARG DEPLOY_TARGET=/app/
WORKDIR ${DEPLOY_TARGET}


# -------------------------------------------
# 依存関係のインストール
# -------------------------------------------
# 指定するバージョンのpythonをビルドしインストール
# --> nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04にpythonは入っていない
# 　　 pythonのバージョンまで固めなくていい場合は`apt install python3-dev`のみに置き換えてもOK
ARG PYTHON_VERSION=3.12.9
ARG UV_PROJECT_ENVIRONMENT_PATH=/usr/local
ENV TZ=Asia/Tokyo \
    DEBIAN_FRONTEND=noninteractive
COPY environments/dev/python-requirements.txt .
RUN apt update && \
    sed 's/#.*//' python-requirements.txt | xargs apt-get install -y --no-install-recommends && \
    wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz && \
    tar xJf Python-${PYTHON_VERSION}.tar.xz && \
    cd Python-${PYTHON_VERSION} && \
    ./configure --prefix=${UV_PROJECT_ENVIRONMENT_PATH} --enable-optimizations && \
    make -j8 && \
    make install && \
    ln -s ${UV_PROJECT_ENVIRONMENT_PATH}/bin/python3 ${UV_PROJECT_ENVIRONMENT_PATH}/bin/python

# apt
COPY environments/dev/package.txt .
RUN apt update && \
    sed 's/#.*//' package.txt | xargs apt-get install -y --no-install-recommends

# uv
# uvのインストール
COPY --from=astral_uv /uv /uvx /bin/
# uvを用いてpythonのライブラリをインストール
ENV UV_PROJECT_ENVIRONMENT=${UV_PROJECT_ENVIRONMENT_PATH}
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project


# -------------------------------------------
# PYTHONPATHに追加
# -------------------------------------------
ARG PYTHONPATH
ENV PYTHONPATH=${PYTHONPATH}:${DEPLOY_TARGET}