name: python-template
services:
  core:
    build:
      args:
        # シェル環境変数から値を取得し、compose.yamlに与える。
        # 現在のテンプレートではmiseを使用し.envをシェル環境変数に使用しているため、
        # .envを変更する操作のみで作業が完結できる。
        # --> シェル環境変数にも環境変数ファイルにも存在しないものは直接ここで記入が必要
        # [Note]
        # 複数のファイルで同じ環境変数がある場合、docker composeは以下優先度で使用する。
        # そのためcompose.yamlを直接書き換えたり、miseで.envの読み込みをやめ、
        # 別途シェル環境変数を設定したりする場合はその値が優先される。
        # [優先度]
        # 1. Composeファイル　　　<-- 今回は2で設定されている値を使用
        # 2. シェル環境変数      (<-- 上述の通り実質的には3の値を使用している)
        # 3. 環境変数ファイル
        # 4. Dockerfile
        # 5. 変数が定義されていない
        # （今回は結局1~3すべて同じものが設定されておりどのみち上記優先度で使用されるので、
        #   1に関しては値は省略し引数名の記載のみでも動作する。）
        DEPLOY_TARGET: ${DEPLOY_TARGET}
        PYTHON_VERSION: ${PYTHON_VERSION}
        UV_VERSION: ${UV_VERSION}
        UV_PROJECT_ENVIRONMENT_PATH: ${UV_PROJECT_ENVIRONMENT_PATH}
        # VAR_NOT_PRESENT_IN_2_OR_3_OR_4: "xxxxx"
      context: ../../
      dockerfile: environments/dev/Dockerfile
    env_file:
      - ../../.env
    tty: true
    volumes:
      - type: bind
        source: ../../
        target: /app
# ホスト側のフォルダを一部除外したい場合は、以下のように設定の追記が必要
# 例）.venvを除外したいとき
#       - type: volume
#         source: exclude
#         target: /app/.venv
# volumes:
#     exclude:
